---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-server
  namespace: system-upgrade
  labels:
    k3s-upgrade: server
spec:
  concurrency: 1
  #version: v1.21.0+k3s1
  channel: https://update.k3s.io/v1-release/channels/stable
  nodeSelector:
    matchExpressions:
    - key: node-role.kubernetes.io/master
      operator: In
      values:
      - "true"
      # - {key: k3s-upgrade, operator: Exists}
      # - {key: k3s-upgrade, operator: NotIn, values: ["disabled", "false"]}
      # - {key: k3s.io/hostname, operator: Exists}
      # - {key: k3os.io/mode, operator: DoesNotExist}
      # - {key: node-role.kubernetes.io/master, operator: In, values: ["true"]}
  serviceAccountName: system-upgrade
  cordon: true
#  drain:
#    force: true
  upgrade:
    image: rancher/k3s-upgrade
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: k3s-agent
  namespace: system-upgrade
  labels:
    k3s-upgrade: agent
spec:
  concurrency: 2 # in general, this should be the number of workers - 1
  #version: v1.21.0+k3s1
  channel: https://update.k3s.io/v1-release/channels/stable
  nodeSelector:
    matchExpressions:
    - key: node-role.kubernetes.io/master
      operator: DoesNotExist
      # - {key: k3s-upgrade, operator: Exists}
      # - {key: k3s-upgrade, operator: NotIn, values: ["disabled", "false"]}
      # - {key: k3s.io/hostname, operator: Exists}
      # - {key: k3os.io/mode, operator: DoesNotExist}
      # - {key: node-role.kubernetes.io/master, operator: NotIn, values: ["true"]}
  serviceAccountName: system-upgrade
  prepare:
    args:
    - prepare
    - server-plan
    image: rancher/k3s-upgrade
  drain:
    force: true
    skipWaitForDeleteTimeout: 60 # set this to prevent upgrades from hanging on small clusters since k8s v1.18
  upgrade:
    image: rancher/k3s-upgrade
